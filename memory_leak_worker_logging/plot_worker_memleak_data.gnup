#!/usr/bin/env gnuplot -c

# usage: gnuplot [infile] [impulse_file] [date_start date_end]

FILE_SEPARATOR = ""
if (substr(GPVAL_PWD,1,1) eq '/') { FILE_SEPARATOR = '/' }
if (FILE_SEPARATOR eq "")         { FILE_SEPARATOR = '\' } # Assume windows

# Loads the default styles from the UTIL dir, relative to this file (ARG0).
#
# WARNING:  If you change the name of this file, you need to change the string
# in the strstrt function below
settings_relative_location = "..".FILE_SEPARATOR."util".FILE_SEPARATOR."gnuplot_default_settings"
load substr(ARG0, 1, strstrt(ARG0, FILE_SEPARATOR."plot_worker_memleak_data.gnup")).settings_relative_location


# To switch to an SVG output, swap the comment for the `@USE_PNG_TERM` and the
# `@USE_SVG_TERM` lines

@USE_PNG_TERM
# @USE_SVG_TERM

set title system('echo ${TITLE:-Memory Allocations}')

input = ARG1
if (input eq "") input="tmp_plot.data"

# output filename is arg2. default tmp_plot.png

if (GPVAL_TERM eq 'png')    { FILE_EXT = "png"  }
if (GPVAL_TERM eq 'svg')    { FILE_EXT = "svg"  }

# FIXME:  Does not work with relative files with a `../`
output_file = substr(input,1,strstrt(input, ".")-1)
if (exists("ARG3")) output_file = output_file."_from_".strftime("%Y%m%d%H%M",strptime("%Y-%m-%dT%H:%M:%S",ARG3))
if (exists("ARG4")) output_file = output_file."_to_".strftime("%Y%m%d%H%M",strptime("%Y-%m-%dT%H:%M:%S",ARG4))

set output output_file.".".FILE_EXT

impulse_data = ""
if (exists("ARG2")) impulse_data = ARG2


set timefmt "%Y-%m-%dT%H:%M:%S"
set format x "%m/%d\n%H:%M"
set xlabel "Time"
set xdata time
set xtic nomirror
set mxtic 6
if (exists("ARG3")) set xrange [ARG3 : ARG4]

unset x2tic

# memory
set ylabel "Memory"
set format y '%.0s%cB'
set autoscale y
set yrange [0: ]
set ytics nomirror

# objects
set y2label "Objects"
set format y2 '%.0s%c'
set autoscale y2
set y2range [0: ]
set y2tics out

if (impulse_data ne "") {
  plot impulse_data using 1:2 t 'memdump' with impulses axes x1y1,      \
       input using 1:4 t 'live' with lines @THICK lc @YELLOW axes x1y2, \
       input using 1:5 t 'old'  with lines @THICK lc @RED    axes x1y2, \
       input using 1:2 t 'PSS'  with lines @THICK lc @TEAL   axes x1y1, \
       input using 1:3 t 'RSS'  with lines @THICK lc @GREEN  axes x1y1
}
if (impulse_data eq "") {
  plot input using 1:4 t 'live' with lines @THICK lc @YELLOW axes x1y2, \
       input using 1:5 t 'old'  with lines @THICK lc @RED    axes x1y2, \
       input using 1:2 t 'PSS'  with lines @THICK lc @TEAL   axes x1y1, \
       input using 1:3 t 'RSS'  with lines @THICK lc @GREEN  axes x1y1
}
