#!/usr/bin/env ruby
#
# A "grep-like" utility that parses stdout provided to it based on common
# search expressions, and formats the output (if the line is pure json) to a
# more human readable format


require 'optparse'

options = {}

OptionParser.new do |opt|
  opt.banner = "Usage: #{File.basename $0} [options]"

  opt.separator ""
  opt.separator "A 'grep-like' utility that parses stdout provided to it based on common"
  opt.separator "search expressions, and formats the output (if the line is pure json) to a"
  opt.separator "more human readable format."
  opt.separator ""
  opt.separator "Options"

  opt.on("-e", "--err",         "Set level to be grep'd to 'err' (alias for '--level=err')") do
    options[:level] = "err"
  end

  opt.on("-l", "--level=LEVEL", "Set level to be grep'd") do |level|
    options[:level] = level
  end

  opt.on("-m", "--message=MSG", "Grep on message") do |message|
    options[:message] = message
  end

  opt.on("-h", "--help",        "Show this message") { puts opt; exit }
end.parse!

require 'json'

grep = //
grep = Regexp.new(grep.source + %Q{"level"\s*:\s*"#{options[:level]}"})        if options[:level]
grep = Regexp.new(grep.source + %Q{,"message"\s*:\s*".*#{options[:message]}})  if options[:message]

ARGF.each_line do |line|
  # {"@timestamp":"2020-12-09T15:45:39.125607 ","hostname":"1-generic-6c546f668-lqrml","pid":8,"tid":"2af531ee3968","level":"err","message":"/opt/IBM/infrastructure-management-gemset/bundler/gems/bluecf-gems-pending-4ced08bb22dd/lib/gems/pending/util/miq-process.rb:21:in `linux_process_stat'\n/opt/IBM/infrastructure-management-gemset/bundler/gems/bluecf-gems-pending-4ced08bb22dd/lib/gems/pending/util/miq-process.rb:93:in `processInfo'\n/var/www/miq/vmdb/app/models/miq_server/status_management.rb:24:in `process_status'\n/var/www/miq/vmdb/app/models/miq_server/status_management.rb:8:in `status_update'\n/var/www/miq/vmdb/app/models/miq_server/status_management.rb:38:in `status_update'\n/var/www/miq/vmdb/app/models/miq_queue.rb:484:in `block in dispatch_method'\n/usr/share/ruby/timeout.rb:93:in `block in timeout'\n/usr/share/ruby/timeout.rb:33:in `block in catch'\n/usr/share/ruby/timeout.rb:33:in `catch'\n/usr/share/ruby/timeout.rb:33:in `catch'\n/usr/share/ruby/timeout.rb:108:in `timeout'\n/var/www/miq/vmdb/app/models/miq_queue.rb:482:in `dispatch_method'\n/var/www/miq/vmdb/app/models/miq_queue.rb:459:in `block in deliver'\n/var/www/miq/vmdb/app/models/user.rb:324:in `with_user_group'\n/var/www/miq/vmdb/app/models/miq_queue.rb:459:in `deliver'\n/var/www/miq/vmdb/app/models/miq_queue_worker_base/runner.rb:80:in `deliver_queue_message'\n/var/www/miq/vmdb/app/models/miq_queue_worker_base/runner.rb:104:in `deliver_message'\n/var/www/miq/vmdb/app/models/miq_queue_worker_base/runner.rb:122:in `block in do_work'\n/var/www/miq/vmdb/app/models/miq_queue_worker_base/runner.rb:118:in `loop'\n/var/www/miq/vmdb/app/models/miq_queue_worker_base/runner.rb:118:in `do_work'\n/var/www/miq/vmdb/app/models/miq_worker/runner.rb:256:in `block in do_work_loop'\n/var/www/miq/vmdb/app/models/miq_worker/runner.
  # [----] I, [2020-07-30T18:27:48.072287 #69643:3fde56c32020]  INFO -- : MIQ(Vmdb::Loggers.apply_config) Log level for azure.log has been changed to [WARN]
  next unless grep.nil? || line =~ grep

  if line =~ /^\{.*\}$/
    json_line = JSON.parse(line)
    puts "[#{json_line["@timestamp"]} ##{json_line["pid"]}:#{json_line["tid"]}] " \
         "#{json_line["level"].upcase.rjust(4)} -- : #{json_line["message"]}"
  else
    puts line
  end
end
